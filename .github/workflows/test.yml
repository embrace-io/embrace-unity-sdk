name: Test

on:
  workflow_call:
    inputs:
      ref:
        description: Git commit to test
        required: false
        type: string
      linux:
        description: Run tests on Linux editor
        required: false
        type: boolean
        default: true
      macos:
        description: Run tests on macOS editor
        required: false
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      ref:
        description: Git commit to test
        required: false
        type: string
      linux:
        description: Run tests on Linux editor
        required: false
        type: boolean
        default: true
      macos:
        description: Run tests on macOS editor
        required: false
        type: boolean
        default: false

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  get_editor_versions:
    # Use the Makefile to get the editor versions to use in subsequent job matrix values.
    name: Get editor versions
    runs-on: ubuntu-22.04
    outputs:
      editor_versions: ${{ steps.get_editor_versions.outputs.editor_versions }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ inputs.ref }}
      - id: get_editor_versions
        name: Get editor versions
        run: |
          echo "editor_versions=$(python3 .github/scripts/vars.py versions)" | tee -a "$GITHUB_OUTPUT"
  test_linux:
    needs: get_editor_versions
    if: ${{ inputs.linux == true }}
    strategy:
      fail-fast: false
      matrix:
        build_target: [android, ios]
        editor: ${{ fromJSON(needs.get_editor_versions.outputs.editor_versions) }}
    name: Test Linux (${{ matrix.editor.project}}, ${{ matrix.build_target }})
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ inputs.ref }}
      - name: Run tests
        uses: ./.github/actions/unity-test
        with:
          build_target: ${{ matrix.build_target }}
          editor_version: ${{ matrix.editor.version }}
          editor_changeset: ${{ matrix.editor.changeset }}
          license_email: ${{ secrets.UNITY_EMAIL }}
          license_password: ${{ secrets.UNITY_PASSWORD }}
          license_serial: ${{ secrets.UNITY_SERIAL }}
          project: ${{ matrix.editor.project }}
  test_macos:
    needs:
      - get_editor_versions
      - test_linux
    if: ${{ inputs.macos == true }}
    strategy:
      max-parallel: 1
      matrix:
        editor: ${{ fromJSON(needs.get_editor_versions.outputs.editor_versions) }}
    name: Test macOS (${{ matrix.editor.project }})
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ inputs.ref }}
      - name: Run tests
        uses: ./.github/actions/unity-test
        with:
          editor_version: ${{ matrix.editor.version }}
          editor_changeset: ${{ matrix.editor.changeset }}
          license_email: ${{ secrets.UNITY_EMAIL }}
          license_password: ${{ secrets.UNITY_PASSWORD }}
          license_serial: ${{ secrets.UNITY_SERIAL }}
          project: ${{ matrix.editor.project }}
  report:
    name: Test Report
    needs:
      - test_linux
      - test_macos
    if: ${{ !failure() && !cancelled() }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ inputs.ref }}
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          path: ./build
          pattern: test-results-*
          merge-multiple: true
      - name: Render test report
        run: |
          python3 .github/scripts/report.py --output "$GITHUB_STEP_SUMMARY" --append
