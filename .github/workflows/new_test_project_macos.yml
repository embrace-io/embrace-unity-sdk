name: Test SDK - Mac

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - non-existent-branch

jobs:
  testSDKOnMac_selfhosted:
    name: ${{ matrix.testProject.displayName }} tests on ${{ matrix.buildTarget.unity }} (MacOS)
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        buildTarget:
          - { unity: "Android", image: "android" }
          - { unity: "iOS", image: "ios" }
        testProject:
          # Commented out as hosted runners do not have the space required to host the editor.
          # - {
          #    displayName: "2023",
          #    unityVersion: "2023.1.11f1",
          #    path: UnityProjects/2023/,
          #  }
          - {
              displayName: "2022",
              unityVersion: "2022.3.8f1",
              path: UnityProjects/2022/,
            }
          - {
              displayName: "2021",
              unityVersion: "2021.3.37f1",
              path: UnityProjects/2021/,
            }
          - {
              displayName: "EDM",
             unityVersion: "2021.3.37f1",
              path: UnityProjects/EDM/,
            }
    runs-on: [self-hosted, macos]
    timeout-minutes: 30
    env:
      CODE_COVERAGE_PATH: ${{ github.workspace }}/${{ matrix.testProject.path }}CI_CodeCoverage
    steps:
      - name: Checkout internal SDK
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: ${{ matrix.testProject.path }}Library
          key: Library-${{ matrix.testProject.path }}-macOS-${{ matrix.buildTarget.image }}
      - name: Stagger Unity License Activation a Random Number of Seconds
        run: sleep ${{ strategy.job-index }}
      - name: Run Play Mode Tests
        env:
          UNITY_TEST_MODE: 'playmode'
          UNITY_BUILD_TARGET: ${{ matrix.buildTarget.unity }}
          UNITY_ADDITIONAL_ARGS: '-coverageResultsPath ${{ env.CODE_COVERAGE_PATH }}'
        run: |
          ./run_tests.sh ${{ matrix.testProject.displayName }}
      - name: Run Edit Mode Tests
        env:
          UNITY_TEST_MODE: 'editmode'
          UNITY_BUILD_TARGET: ${{ matrix.buildTarget.unity }}
          UNITY_ADDITIONAL_ARGS: '-coverageResultsPath ${{ env.CODE_COVERAGE_PATH }}'
        run: |
          ./run_tests.sh ${{ matrix.testProject.displayName }}

      - name: Upload Test Results Artifacts
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: MacOS test results for ${{ matrix.testProject.displayName }} - ${{ matrix.buildTarget.unity }}
          path: ${{ github.workspace }}/${{ matrix.testProject.path }}/*results.xml
          retention-days: 1

      - name: Upload coverage reports to codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.CODE_COVERAGE_PATH }}/**/*.xml
          name: ${{ matrix.testProject.displayName }} test results for ${{ matrix.buildTarget.unity }}
