name: Publish Unity SDK from Public Repo

env:
  PACKAGE_REPO_PATH: 'embrace-unity-sdk-internal'
  PACKAGE_DIRECTORY: './io.embrace.sdk'
  PACKAGE_JSON_PATH: './io.embrace.sdk/package.json'
  PACKAGE_CHANGELOG_PATH: './io.embrace.sdk/CHANGELOG.md'
  EDM_DEPENDENCIES_PATH: './io.embrace.sdk/Editor/EmbraceSDKDependencies.xml'
  DOCS_REPO_PATH: 'embrace-docs'
  DOCS_CHANGELOG_PATH: 'docs/unity/changelog.md'
  DOCS_CONFIG_PATH: 'embrace.json'
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - alyssa/iOS/6.5.1
      - non-existent-branch

jobs:
  generate_iOS_xcframeworks:
    name: Generate Unity iOS XCFramework
    runs-on: macos-latest
    steps:
      - name: Checkout SDK
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Install xcpretty
        run: gem install xcpretty
      - name: Download iOS SDK
        run: |
          curl -L -O https://github.com/embrace-io/embrace-apple-sdk/releases/download/6.4.0/embrace_6.4.0.zip
          unzip embrace_6.4.0.zip -d ./Embrace\ Unity\ iOS\ Interface/
          rm embrace_6.4.0.zip
      - name: Generate iOS XCFrameworks
        run: |
          cd ./Embrace\ Unity\ iOS\ Interface/
          ./build_xcframework.sh
      - name: Upload XCFrameworks
        uses: actions/upload-artifact@v4
        with:
          name: EmbraceUnityXCFramework
          path: ./Embrace\ Unity\ iOS\ Interface/build/EmbraceUnityiOS.xcframework
          retention-days: 1
  create_package:
    name: Create Unity Test Package
    runs-on: ubuntu-latest
    needs: 
      - generate_iOS_xcframeworks
    strategy:
      matrix:
        os: [
          { host: ubuntu-latest, image: ubuntu }
        ]
        buildTarget: [
          { unity: Android, image: android },
        ]
        project: [
          { displayName: Unity 2021, unityVersion: 2021.3.37f1, path: UnityProjects/2021 },
        ]
    steps:
      - name: Clear Space
        uses: embrace-io/free-disk-space@main
        with:
          haskell: true
      - name: Checkout internal SDK
        uses: actions/checkout@v4
        with:
          repository: embrace-io/embrace-unity-sdk-internal
          submodules: recursive
          lfs: true
      - name: Fetch Embrace iOS SDK XCFrameworks
        run: | 
          curl -L -O https://github.com/embrace-io/embrace-apple-sdk/releases/download/6.4.0/embrace_6.4.0.zip
          unzip embrace_6.4.0.zip -d ./io.embrace.sdk/iOS
          rm embrace_6.4.0.zip
      - name: Fetch Unity iOS SDK XCFramework
        uses: actions/download-artifact@v4
        with:
          name: EmbraceUnityXCFramework
          path: ./io.embrace.sdk/iOS/xcframeworks/EmbraceUnityiOS.xcframework/
      - name: Enforce Publish Public SDK version
        run: |
          ./enforce_publish_sdk.sh
      # Parses the SDK package version from the package.json file via the jq utility
      - name: Get Package Version
        run: |
          export PACKAGE_VERSION=$(cat ./${{ env.PACKAGE_JSON_PATH }} | jq -r .version)
          echo "${PACKAGE_VERSION}"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: ${{ env.PACKAGE_REPO_PATH }}/${{ matrix.project.path }}Library
          key: Library-${{ matrix.project.path }}-${{ matrix.os.host }}-${{ matrix.buildTarget.image }}
      - name: ls
        run: ls
      - name: Export .unitypackage
        uses: game-ci/unity-builder@v4
        id: exportUnityPackage
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: ${{ matrix.project.path}}
          unityVersion: ${{ matrix.project.unityVersion }}
          targetPlatform: ${{ matrix.buildTarget.unity }}
          customImage: 'unityci/editor:${{ matrix.os.image }}-${{ matrix.project.unityVersion }}-${{ matrix.buildTarget.image }}-3.0.1'
          customParameters: -buildTarget ${{ matrix.buildTarget.unity }}
          versioning: None
          buildMethod: EmbraceSDK.CIPublishTool.ExportUnityPackage
      - uses: actions/upload-artifact@v4
        with:
          name: unitypackage.zip
          path: './${{ matrix.project.path }}/EmbraceSDK_${{ env.PACKAGE_VERSION }}.unitypackage'
          if-no-files-found: error
          retention-days: 1 