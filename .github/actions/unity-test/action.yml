name: Unity Test
description: Run the Unity SDK tests.

inputs:
  build_target:
    description: >
      Unity build target ("android" or "ios"). If omitted, both build targets
      will be run.
  editor_version:
    description: Version of the Unity editor.
    required: true
  editor_changeset:
    description: Changeset for the Unity editor version.
    required: true
  license_email:
    description: Email to use for Unity activation.
    required: true
  license_password:
    description: Password to use for Unity activation.
    required: true
  license_serial:
    description: Serial to use for Unity activation.
    required: true
  project:
    description: Name of the project folder in UnityProjects
    required: true

runs:
  using: composite
  steps:
    - name: Set environment variables from inputs
      shell: bash
      env:
        BUILD_TARGET: ${{ inputs.build_target }}
        EDITOR_CHANGESET: ${{ inputs.editor_changeset }}
        EDITOR_VERSION: ${{ inputs.editor_version }}
      run: |
        make github_env_vars | tee -a $GITHUB_ENV
    - name: Cache Library folder
      uses: actions/cache@v4
      with:
        path: ./UnityProjects/${{ inputs.project }}/Library
        key: Library-${{ inputs.project }}-Android
        restore-keys: |
          Library-${{ inputs.project }}-
          Library-
    - name: Install iOS dependencies
      if: ${{ inputs.build_target != 'android' }}
      shell: bash
      run: |
        make install_ios_dependencies
    - name: Install Unity Hub
      shell: bash
      run: |
        make install_hub
    - name: Install editor
      shell: bash
      run: |
        make install_editor
    - name: Run tests
      shell: bash
      env:
        UNITY_EMAIL: ${{ inputs.license_email }}
        UNITY_PASSWORD: ${{ inputs.license_password }}
        UNITY_SERIAL: ${{ inputs.license_serial }}
      run: |
        make test
    - name: Output Test Results
      shell: bash
      run: |
        cd ./build/test-results
        cat ./*
    - name: Render Test Report
      uses: dorny/test-reporter@v2
      with:
        name: ${{ inputs.editor_version }} Tests
        path: ./build/test-results/*.xml
        reporter: dotnet-nunit
    - name: Output Test Logs
      shell: bash
      run: |
        cd ./build/test-logs
        cat ./*
    - name: Uninstall editor
      shell: bash
      run: |
        make uninstall_editor
